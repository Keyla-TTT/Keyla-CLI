name: Release

on:
  push:
    branches:
      - '**'

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: linuxX64
            binary_name: keyla-linux
            platform_path: linuxX64
          - os: macos-latest
            arch: macosArm64
            binary_name: keyla-macos-arm64
            platform_path: macosArm64
          - os: windows-latest
            arch: mingwX64
            binary_name: keyla-windows.exe
            platform_path: mingwX64

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for semantic-release

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - name: Install Linux native dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev zlib1g-dev
          
      - name: Install curl on macOS
        if: runner.os == 'macOS'
        run: |
          brew install curl
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/curl/lib/pkgconfig" >> $GITHUB_ENV
          echo "LDFLAGS=-L/opt/homebrew/opt/curl/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/curl/include" >> $GITHUB_ENV
          echo "PATH=/opt/homebrew/opt/curl/bin:$PATH" >> $GITHUB_ENV

      - name: Cache Kotlin Native compiler
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: kotlin-native-compiler-${{ runner.os }}-${{ hashFiles('gradle.lockfile') }}

      - name: Debug runner info
        run: |
          echo "Runner OS: ${{ runner.os }}"
          echo "Runner Arch: ${{ runner.arch }}"
          echo "Runner Name: ${{ runner.name }}"
          echo "Matrix Arch: ${{ matrix.arch }}"
          echo "Platform Path: ${{ matrix.platform_path }}"
          uname -m

      - name: Build Native Executable
        run: |
          echo "Building for ${{ matrix.arch }}"
          ./gradlew linkReleaseExecutable${{ matrix.arch }}
        shell: bash

      - name: Rename binary for upload
        run: |
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp build/bin/${{ matrix.platform_path }}/releaseExecutable/Keyla.exe dist/${{ matrix.binary_name }}
          else
            cp build/bin/${{ matrix.platform_path }}/releaseExecutable/Keyla.kexe dist/${{ matrix.binary_name }}
          fi
        shell: bash

      - name: Upload binaries for semantic-release
        uses: actions/upload-artifact@v4
        with:
          name: native-${{ runner.os }}
          path: dist/*

  publish:
    name: Run Semantic Release
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Install semantic-release plugins
        run: |
          npm install --save-dev semantic-release @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/changelog @semantic-release/git @semantic-release/github

      - name: List downloaded files
        run: ls -R dist

      - name: Run Semantic Release with assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --extends ./release.config.cjs
